<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lrm.dao.BolgDao">

    <resultMap id="User" type="com.lrm.pojo.User">
        <id property="id" column="id"/>
        <result property="avatar" column="avatar"/>
        <result property="email" column="email"/>
        <result property="nickname" column="nickname"/>
        <result property="username" column="username"/>
    </resultMap>

    <resultMap id="blogMap" type="com.lrm.vo.BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="typeId" column="type_id"/>
        <result property="published" column="published"/>
        <association property="type" javaType="com.lrm.pojo.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <select id="getAllBlogQuery" resultMap="blogMap">
        select b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name
        from blog.t_blog b left outer join blog.t_type t
                                                   on b.type_id = t.id
        order by b.update_time desc
    </select>

    <delete id="deleteBlog">
        delete from blog.t_blog where id = #{id}
    </delete>

    <delete id="deleteBlogAndTag" >
        delete from blog.t_blog_tags where blog_id = #{blogId}
    </delete>

    <resultMap id="blog" type="com.lrm.pojo.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="views" column="views"/>
        <result property="appreciation" column="appreciation"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="commentabled" column="commentabled"/>
        <result property="published" column="published"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
        <result property="firstPicture" column="first_picture"></result>
    </resultMap>

    <insert id="saveBlog" parameterType="com.lrm.pojo.Blog">
        insert into blog.t_blog (id,title, content, first_picture, flag,
                                         views, appreciation, share_statement, commentabled,published,
                                         recommend, create_time, update_time, type_id,user_id)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{appreciation},
                #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
                #{updateTime},#{typeId},#{userId});
    </insert>

    <select id="searchByTitleOrTypeOrRecommend" parameterType="com.lrm.vo.SearchBlog" resultMap="blogMap">
        <bind name="pattern" value="'%' + title + '%'" />
        select b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name
        from blog.t_blog b ,blog.t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id
            </if>
            <if test="typeId != null and typeId != ''">
                and b.type_id = #{typeId}
            </if>
            <if test="recommend != null and recommend != ''">
                and b.recommend = #{recommend}
            </if>
            <if test="title != null and title != ''">
                and b.title like #{pattern}
            </if>
        </where>
    </select>

    <select id="findByLikeBlog" parameterType="com.lrm.pojo.Blog" resultMap="blogMap">
        <bind name="pattern" value="'%' + title + '%'" />
        select b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name
        from blog.t_blog b ,blog.t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id
            </if>
            <if test="typeId != null and typeId != ''">
                and b.type_id = #{typeId}
            </if>
            <if test="recommend != null and recommend != ''">
                and b.recommend = #{recommend}
            </if>
            <if test="title != null and title != ''">
                and b.title like #{pattern}
            </if>
        </where>
    </select>

    <select id="getBlogById" resultType="com.lrm.vo.ShowBlog" >
        select b.id, b.published, b.flag, b.title, b.content, b.type_id as typeId,
               b.tag_ids as tagIds,b.first_picture as firstPicture,b.description,b.recommend,b.share_statement,
               b.appreciation,b.commentabled
        from blog.t_blog b
        where  b.id = #{id};
    </select>

    <update id="updateBlog" parameterType="com.lrm.vo.ShowBlog">
        update blog.t_blog set published = #{published},flag = #{flag} ,
                                       title = #{title}, content = #{content}, type_id = #{typeId}, tag_ids = #{tagIds},
                                       first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
                                       share_statement = #{shareStatement}, appreciation = #{appreciation},
                                       commentabled = #{commentabled} ,update_time = #{updateTime}
        where id = #{id};
    </update>


    <resultMap id="firstPageBlog" type="com.lrm.vo.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>

        <result property="typeName" column="name"/>

        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <select id="getAllFirstPageBlog" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
               t.name ,
               u.nickname, u.avatar
        from blog.t_blog b, blog.t_type t,blog.t_user u
        where b.type_id = t.id
          and  u.id = b.user_id
        order by b.update_time desc
    </select>

    <select id="getAllRecommendBlog" resultType="com.lrm.vo.RecommendBlog">
        select id,title,recommend
        from blog.t_blog;
    </select>

    <select id="getSearchBlog" resultMap="firstPageBlog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from blog.t_blog b, blog.t_type t,blog.t_user u
        where b.type_id = t.id
        and  u.id = b.user_id
        and (b.title like #{pattern}
        or b.content like  #{pattern})
        order by b.update_time desc
    </select>

    <resultMap id="detailedBlog" type="com.lrm.vo.DetailedBlog">
        <id property="id" column="bid"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <select id="getDetailedBlog" resultMap="detailedBlog">
        select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar
        from blog.t_blog b,blog.t_user u
        where b.user_id = u.id and b.id = #{id}
    </select>

    <select id="getByTypeId" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
               t.name ,
               u.nickname, u.avatar
        from blog.t_blog b, blog.t_type t,blog.t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId} order by b.update_time desc
    </select>


    <update id="updateViews" parameterType="com.lrm.pojo.Blog">
        update blog.t_blog b set b.views = b.views+1 where b.id = #{id}
    </update>
</mapper>